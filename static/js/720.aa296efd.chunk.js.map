{"version":3,"file":"static/js/720.aa296efd.chunk.js","mappings":"sQAEaA,EAAYC,EAAAA,GAAAA,IAAH,4FAMTC,EAAaD,EAAAA,GAAAA,KAAH,sBAEVE,EAAcF,EAAAA,GAAAA,MAAH,yGAOXG,EAAeH,EAAAA,GAAAA,OAAH,0K,SCVZI,EAAa,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3B,OACE,SAACN,EAAD,WACE,UAACE,EAAD,CAAYI,SAAUA,EAAtB,WACE,SAACH,EAAD,CACEI,KAAK,OACLC,WAAS,EACTC,KAAK,QACLC,YAAY,uBAEd,SAACN,EAAD,CAAcG,KAAK,SAAnB,wBAIP,E,SClBYP,EAAYC,EAAAA,GAAAA,IAAH,sBAETU,EAAOV,EAAAA,GAAAA,GAAH,6CAIJW,EAAWX,EAAAA,GAAAA,GAAH,+GAORY,GAAYZ,EAAAA,EAAAA,IAAOa,EAAAA,GAAPb,CAAH,0J,SC+BtB,EAvCe,WACb,OAA4Bc,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MAiBjB,OACE,UAAC,EAAD,YACE,SAACjB,EAAD,CAAYC,SAjBK,SAAAiB,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,OACTC,EAAQF,EAAKG,MAAMC,MAAMC,OAE/B,IAAKX,IAAiBQ,EACpB,OAAOI,EAAAA,GAAAA,KAAW,4BAElBC,EAAAA,EAAAA,IAAgBL,GAAOM,MAAK,SAAAC,GAAI,OAAIjB,EAAUiB,EAAKC,QAAnB,IAChCf,EAAgB,CAAEO,MAAOA,IACzBI,EAAAA,GAAAA,QAAc,6BACdN,EAAKW,OAER,IAKIpB,EAAOqB,OAAS,IACf,SAAC1B,EAAD,UACGK,EAAOsB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACV,SAAC5B,EAAD,WACE,UAACC,EAAD,CAAW4B,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMtB,GAA/C,eACKmB,MAFQD,EADL,OAShB,SAAC,KAAD,MAGL,C,8LCtCM,SAAeK,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,GAAAA,IAAU,sBAD5B,cACCC,EADD,yBAEEA,EAASZ,MAFX,kEAKA,SAAeF,EAAtB,+CAAO,OAAP,oBAAO,WAA+BL,GAA/B,uFACkBkB,EAAAA,GAAAA,IAAA,6BAAgClB,IADlD,cACCmB,EADD,yBAEEA,EAASZ,MAFX,kEAKA,SAAea,EAAtB,+CAAO,OAAP,oBAAO,WAA+BR,GAA/B,uFACkBM,EAAAA,GAAAA,IAAA,iBAAoBN,IADtC,cACCO,EADD,yBAEEA,EAASZ,MAFX,kEAKA,SAAec,EAAtB,+CAAO,OAAP,oBAAO,WAA+BT,GAA/B,uFACkBM,EAAAA,GAAAA,IAAA,iBAAoBN,EAApB,aADlB,cACCO,EADD,yBAEEA,EAASZ,MAFX,kEAKA,SAAee,EAAtB,+CAAO,OAAP,oBAAO,WAA+BV,GAA/B,uFACkBM,EAAAA,GAAAA,IAAA,iBAAoBN,EAApB,aADlB,cACCO,EADD,yBAEEA,EAASZ,MAFX,kEAzBPW,EAAAA,GAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,GAAAA,SAAAA,OAAwB,CACtBK,QAAS,mC","sources":["components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","services/api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding-top: 24px;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const FormSearch = styled.form``;\n\nexport const SearchInput = styled.input`\n  width: 300px;\n  height: 30px;\n  margin-right: 10px;\n  border-radius: 15px;\n`;\n\nexport const SearchButton = styled.button`\n  cursor: pointer;\n  width: 100px;\n  height: 35px;\n  border-radius: 15px;\n\n  :hover {\n    background-color: green;\n    color: white;\n  }\n`;\n","import {\n  Container,\n  FormSearch,\n  SearchInput,\n  SearchButton,\n} from './SearchForm.styled';\n\nexport const SearchForm = ({ onSubmit }) => {\n  return (\n    <Container>\n      <FormSearch onSubmit={onSubmit}>\n        <SearchInput\n          type=\"text\"\n          autoFocus\n          name=\"input\"\n          placeholder=\"Enter movie title\"\n        />\n        <SearchButton type=\"submit\">Search</SearchButton>\n      </FormSearch>\n    </Container>\n  );\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div``;\n\nexport const List = styled.ul`\n  list-style: none;\n`;\n\nexport const ListItem = styled.li`\n  font-size: 24px;\n  padding-bottom: 5px;\n  padding-top: 5px;\n  font-weight: bold;\n`;\n\nexport const MovieLink = styled(NavLink)`\n  text-decoration: none;\n  color: black;\n\n  :hover,\n  :focus {\n    background-color: #d9d9d9;\n    border-radius: 5px;\n  }\n`;\n","import { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useState } from 'react';\nimport { GetSearchMovies } from 'services/api';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { Container, List, ListItem, MovieLink } from './Movies.styled';\nimport { useLocation, useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchparams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const query = form.input.value.trim();\n\n    if (!searchparams || !query) {\n      return toast.warn('Please enter movie name');\n    } else {\n      GetSearchMovies(query).then(data => setMovies(data.results));\n      setSearchParams({ query: query });\n      toast.success('Here is the search result');\n      form.reset();\n    }\n  };\n\n  return (\n    <Container>\n      <SearchForm onSubmit={handleSubmit} />\n      {movies.length > 0 && (\n        <List>\n          {movies.map(({ id, original_title }) => (\n            <ListItem key={id}>\n              <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n                - {original_title}\n              </MovieLink>\n            </ListItem>\n          ))}\n        </List>\n      )}\n      <ToastContainer />\n    </Container>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'a7cdca3ac9a73d688c9dec2c3c2e067b',\n};\n\nexport async function GetTrendingMovies() {\n  const response = await axios.get('trending/movie/day');\n  return response.data;\n}\n\nexport async function GetSearchMovies(query) {\n  const response = await axios.get(`search/movie?query=${query}`);\n  return response.data;\n}\n\nexport async function GetMovieDetails(id) {\n  const response = await axios.get(`/movie/${id}`);\n  return response.data;\n}\n\nexport async function GetMovieCredits(id) {\n  const response = await axios.get(`/movie/${id}/credits`);\n  return response.data;\n}\n\nexport async function GetMovieReviews(id) {\n  const response = await axios.get(`/movie/${id}/reviews`);\n  return response.data;\n}\n"],"names":["Container","styled","FormSearch","SearchInput","SearchButton","SearchForm","onSubmit","type","autoFocus","name","placeholder","List","ListItem","MovieLink","NavLink","useState","movies","setMovies","useSearchParams","searchparams","setSearchParams","location","useLocation","e","preventDefault","form","target","query","input","value","trim","toast","GetSearchMovies","then","data","results","reset","length","map","id","original_title","to","state","from","GetTrendingMovies","axios","response","GetMovieDetails","GetMovieCredits","GetMovieReviews","api_key"],"sourceRoot":""}