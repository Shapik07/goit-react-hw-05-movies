{"version":3,"file":"static/js/696.6d91cec4.chunk.js","mappings":"yPAEaA,EAAOC,EAAAA,GAAAA,GAAH,qHAQJC,EAAWD,EAAAA,GAAAA,GAAH,8DAKRE,EAAQF,EAAAA,GAAAA,IAAH,2DAKLG,EAAYH,EAAAA,GAAAA,EAAH,qFAMTI,EAAOJ,EAAAA,GAAAA,EAAH,gFAMJK,EAAWL,EAAAA,GAAAA,KAAH,gE,SCmBrB,EAtCqB,WACnB,IAAQM,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAVAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBN,GAASO,MAAK,SAAAC,GACvBA,GAGHJ,EAAWI,EAAKC,KAEnB,GACF,GAAE,CAACT,KAGF,SAACP,EAAD,UACGU,EAAQO,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,cAAeC,EAAhC,EAAgCA,UAAWC,EAA3C,EAA2CA,GAA3C,OACX,UAACnB,EAAD,YACE,SAACC,EAAD,CACEmB,IACEJ,EAlBI,mCAmBUA,EACV,sEAENK,IAAKJ,KAEP,SAACf,EAAD,UAAYe,KACZ,UAACd,EAAD,0BACa,SAACC,EAAD,UAAWc,SAXXC,EADJ,KAkBlB,C,8LC1CM,SAAeG,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,GAAAA,IAAU,sBAD5B,cACCC,EADD,yBAEEA,EAASX,MAFX,kEAKA,SAAeY,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACkBH,EAAAA,GAAAA,IAAA,6BAAgCG,IADlD,cACCF,EADD,yBAEEA,EAASX,MAFX,kEAKA,SAAec,EAAtB,+CAAO,OAAP,oBAAO,WAA+BR,GAA/B,uFACkBI,EAAAA,GAAAA,IAAA,iBAAoBJ,IADtC,cACCK,EADD,yBAEEA,EAASX,MAFX,kEAKA,SAAeF,EAAtB,+CAAO,OAAP,oBAAO,WAA+BQ,GAA/B,uFACkBI,EAAAA,GAAAA,IAAA,iBAAoBJ,EAApB,aADlB,cACCK,EADD,yBAEEA,EAASX,MAFX,kEAKA,SAAee,EAAtB,+CAAO,OAAP,oBAAO,WAA+BT,GAA/B,uFACkBI,EAAAA,GAAAA,IAAA,iBAAoBJ,EAApB,aADlB,cACCK,EADD,yBAEEA,EAASX,MAFX,kEAzBPU,EAAAA,GAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,GAAAA,SAAAA,OAAwB,CACtBM,QAAS,mC","sources":["components/Casts/Casts.styled.jsx","components/Casts/Casts.jsx","services/api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n  list-style: none;\n  padding-left: 0;\n`;\n\nexport const ListItem = styled.li`\n  max-width: 230px;\n  padding: 5px;\n`;\n\nexport const Image = styled.img`\n  width: 230px;\n  height: 345px;\n`;\n\nexport const ActorName = styled.p`\n  font-size: 24px;\n  font-weight: bold;\n  margin: 12px 0;\n`;\n\nexport const Info = styled.p`\n  font-size: 16px;\n  font-weight: bold;\n  margin: 0;\n`;\n\nexport const InfoText = styled.span`\n  font-weight: normal;\n  color: blue;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { GetMovieCredits } from 'services/api';\n\nimport {\n  List,\n  ListItem,\n  Image,\n  ActorName,\n  Info,\n  InfoText,\n} from './Casts.styled';\n\nconst MovieCredits = () => {\n  const { details } = useParams();\n  const [credits, setCredits] = useState([]);\n\n  const IMG_URL = 'https://image.tmdb.org/t/p/w200/';\n\n  useEffect(() => {\n    GetMovieCredits(details).then(data => {\n      if (!data) {\n        return;\n      } else {\n        setCredits(data.cast);\n      }\n    });\n  }, [details]);\n\n  return (\n    <List>\n      {credits.map(({ profile_path, original_name, character, id }) => (\n        <ListItem key={id}>\n          <Image\n            src={\n              profile_path\n                ? IMG_URL + profile_path\n                : 'https://cloupyblob.blob.core.windows.net/cloupy/image-not-found.png'\n            }\n            alt={original_name}\n          ></Image>\n          <ActorName>{original_name}</ActorName>\n          <Info>\n            Character: <InfoText>{character}</InfoText>\n          </Info>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default MovieCredits;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'a7cdca3ac9a73d688c9dec2c3c2e067b',\n};\n\nexport async function GetTrendingMovies() {\n  const response = await axios.get('trending/movie/day');\n  return response.data;\n}\n\nexport async function GetSearchMovies(query) {\n  const response = await axios.get(`search/movie?query=${query}`);\n  return response.data;\n}\n\nexport async function GetMovieDetails(id) {\n  const response = await axios.get(`/movie/${id}`);\n  return response.data;\n}\n\nexport async function GetMovieCredits(id) {\n  const response = await axios.get(`/movie/${id}/credits`);\n  return response.data;\n}\n\nexport async function GetMovieReviews(id) {\n  const response = await axios.get(`/movie/${id}/reviews`);\n  return response.data;\n}\n"],"names":["List","styled","ListItem","Image","ActorName","Info","InfoText","details","useParams","useState","credits","setCredits","useEffect","GetMovieCredits","then","data","cast","map","profile_path","original_name","character","id","src","alt","GetTrendingMovies","axios","response","GetSearchMovies","query","GetMovieDetails","GetMovieReviews","api_key"],"sourceRoot":""}