{"version":3,"file":"static/js/170.51ce5a16.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx","services/api.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink, Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const PictureThumb = styled.div``;\n\nexport const Button = styled(Link)`\n  margin-bottom: 10px;\n  margin-top: 10px;\n  color: black;\n  font-weight: bold;\n  padding: 5px;\n  text-decoration: none;\n  border: 3px solid black;\n  border-radius: 5px;\n  margin-left: 30px;\n  margin-right: auto;\n\n  :hover {\n    background-color: green;\n    color: white;\n    border: 3px solid green;\n  }\n`;\n\nexport const Card = styled.article`\n  display: flex;\n`;\n\nexport const Picture = styled.img`\n  margin-top: 10px;\n  margin-left: 10px;\n`;\n\nexport const MovieTitle = styled.h1`\n  font-size: 48px;\n`;\n\nexport const InfoList = styled.ul`\n  list-style: none;\n  margin: 0;\n`;\n\nexport const ListItem = styled.li`\n  font-size: 24px;\n  font-weight: bold;\n  margin: 16px 0;\n`;\n\nexport const Info = styled.span`\n  font-weight: normal;\n`;\n\nexport const InfoLink = styled(NavLink)`\n  font-size: 24px;\n  text-decoration: none;\n  font-weight: bold;\n  color: blue;\n\n  :hover,\n  :focus {\n    background-color: #d9d9d9;\n    border-radius: 5px;\n  }\n`;\n\nexport const AdditionalInfoList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  width: 300px;\n  justify-content: space-evenly;\n`;\n\nexport const Title = styled.h2`\n  font-size: 30px;\n  margin-bottom: 0;\n`;\n","import { useEffect, useState, useRef } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { GetMovieDetails } from 'services/api';\n\nimport {\n  Container,\n  Card,\n  PictureThumb,\n  Picture,\n  InfoList,\n  ListItem,\n  MovieTitle,\n  Info,\n  InfoLink,\n  AdditionalInfoList,\n  Title,\n  Button,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { details } = useParams();\n  const [movie, setMovie] = useState([]);\n  const location = useLocation();\n\n  const IMG_URL = 'https://image.tmdb.org/t/p/w500/';\n\n  useEffect(() => {\n    GetMovieDetails(details).then(data => {\n      if (!data) {\n        return;\n      } else {\n        setMovie(data);\n      }\n    });\n  }, [details]);\n\n  const { poster_path, original_title, vote_average, overview, genres } = movie;\n\n  const getGenres = () => {\n    if (genres) {\n      return genres.reduce(\n        (acc, genre) => acc + `${acc ? ', ' : ''}${genre.name}`,\n        ''\n      );\n    }\n  };\n\n  const search = useRef(location.state?.from?.search);\n\n  return (\n    <>\n      <Container>\n        <Button to={location.state.from}>Go back</Button>\n        {movie && (\n          <Card>\n            <PictureThumb>\n              <Picture\n                src={\n                  poster_path\n                    ? IMG_URL + poster_path\n                    : 'https://cloupyblob.blob.core.windows.net/cloupy/image-not-found.png'\n                }\n                title={original_title}\n              ></Picture>\n            </PictureThumb>\n            <InfoList>\n              <ListItem>\n                <MovieTitle>{original_title}</MovieTitle>\n              </ListItem>\n              <ListItem>\n                User core:\n                <Info> {Math.round(vote_average * 10)} %</Info>\n              </ListItem>\n              <ListItem>\n                Overview:\n                <Info> {overview}</Info>\n              </ListItem>\n              <ListItem>\n                Genres:\n                <Info> {getGenres()}</Info>\n              </ListItem>\n            </InfoList>\n          </Card>\n        )}\n      </Container>\n\n      <Container>\n        <Title>Additional information</Title>\n        <AdditionalInfoList>\n          <ListItem>\n            <InfoLink\n              to=\"cast\"\n              state={{\n                from: search.current ? `/movies${search.current}` : '/',\n              }}\n            >\n              Cast\n            </InfoLink>\n          </ListItem>\n          <ListItem>\n            <InfoLink\n              to=\"reviews\"\n              state={{\n                from: search.current ? `/movies${search.current}` : '/',\n              }}\n            >\n              Reviews\n            </InfoLink>\n          </ListItem>\n        </AdditionalInfoList>\n      </Container>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'a7cdca3ac9a73d688c9dec2c3c2e067b',\n};\n\nexport async function GetTrendingMovies() {\n  const response = await axios.get('trending/movie/day');\n  return response.data;\n}\n\nexport async function GetSearchMovies(query) {\n  const response = await axios.get(`search/movie?query=${query}`);\n  return response.data;\n}\n\nexport async function GetMovieDetails(id) {\n  const response = await axios.get(`/movie/${id}`);\n  return response.data;\n}\n\nexport async function GetMovieCredits(id) {\n  const response = await axios.get(`/movie/${id}/credits`);\n  return response.data;\n}\n\nexport async function GetMovieReviews(id) {\n  const response = await axios.get(`/movie/${id}/reviews`);\n  return response.data;\n}\n"],"names":["Container","styled","PictureThumb","Button","Link","Card","Picture","MovieTitle","InfoList","ListItem","Info","InfoLink","NavLink","AdditionalInfoList","Title","details","useParams","useState","movie","setMovie","location","useLocation","useEffect","GetMovieDetails","then","data","poster_path","original_title","vote_average","overview","genres","search","useRef","state","from","to","src","title","Math","round","reduce","acc","genre","name","getGenres","current","GetTrendingMovies","axios","response","GetSearchMovies","query","id","GetMovieCredits","GetMovieReviews","api_key"],"sourceRoot":""}