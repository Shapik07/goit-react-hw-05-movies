{"version":3,"file":"static/js/291.1de4d2eb.chunk.js","mappings":"yQAEaA,EAAOC,EAAAA,GAAAA,GAAH,oEAKJC,EAAWD,EAAAA,GAAAA,GAAH,6GAMRE,EAAaF,EAAAA,GAAAA,EAAH,2FAOVG,EAASH,EAAAA,GAAAA,KAAH,kEAKNI,EAAeJ,EAAAA,GAAAA,KAAH,gD,SCmBzB,EA/BqB,WACnB,IAAQK,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBN,GAASO,MAAK,SAAAC,GACvBA,EAIHJ,EAAWI,EAAKC,SAHhBC,EAAAA,GAAAA,KAAW,+BAKd,GACF,GAAE,CAACV,IAEsB,IAAnBG,EAAQQ,QACb,SAACd,EAAD,2DAEA,UAACH,EAAD,WACGS,EAAQS,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACX,SAACnB,EAAD,WACE,UAACE,EAAD,WACGe,EADH,MACY,SAACd,EAAD,UAAee,QAFdC,EADJ,KAOb,SAAC,KAAD,MAGL,C,8LCnCM,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,GAAAA,IAAU,sBAD5B,cACCC,EADD,yBAEEA,EAASV,MAFX,kEAKA,SAAeW,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACkBH,EAAAA,GAAAA,IAAA,6BAAgCG,IADlD,cACCF,EADD,yBAEEA,EAASV,MAFX,kEAKA,SAAea,EAAtB,+CAAO,OAAP,oBAAO,WAA+BN,GAA/B,uFACkBE,EAAAA,GAAAA,IAAA,iBAAoBF,IADtC,cACCG,EADD,yBAEEA,EAASV,MAFX,kEAKA,SAAec,EAAtB,+CAAO,OAAP,oBAAO,WAA+BP,GAA/B,uFACkBE,EAAAA,GAAAA,IAAA,iBAAoBF,EAApB,aADlB,cACCG,EADD,yBAEEA,EAASV,MAFX,kEAKA,SAAeF,EAAtB,+CAAO,OAAP,oBAAO,WAA+BS,GAA/B,uFACkBE,EAAAA,GAAAA,IAAA,iBAAoBF,EAApB,aADlB,cACCG,EADD,yBAEEA,EAASV,MAFX,kEAzBPS,EAAAA,GAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,GAAAA,SAAAA,OAAwB,CACtBM,QAAS,mC","sources":["components/MovieReviews/MovieReviews.styled.jsx","components/MovieReviews/MovieReviews.jsx","services/api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding-left: 10px;\n`;\n\nexport const ItemList = styled.li`\n  margin-bottom: 16px;\n  padding-bottom: 16px;\n  border-bottom: 1px dashed black;\n`;\n\nexport const TextResult = styled.p`\n  padding-left: 10px;\n\n  font-size: 24px;\n  font-weight: bold;\n`;\n\nexport const Author = styled.span`\n  font-size: 24px;\n  font-weight: bold;\n`;\n\nexport const AuthorReview = styled.span`\n  font-weight: normal;\n`;\n","import { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { GetMovieReviews } from 'services/api';\nimport {\n  List,\n  ItemList,\n  Author,\n  AuthorReview,\n  TextResult,\n} from 'components/MovieReviews/MovieReviews.styled';\n\nconst MovieReviews = () => {\n  const { details } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    GetMovieReviews(details).then(data => {\n      if (!data) {\n        toast.warn('Wooops, something went wrong');\n        return;\n      } else {\n        setReviews(data.results);\n      }\n    });\n  }, [details]);\n\n  return reviews.length === 0 ? (\n    <TextResult>We don't have any reviews for this movie :(</TextResult>\n  ) : (\n    <List>\n      {reviews.map(({ author, content, id }) => (\n        <ItemList key={id}>\n          <Author>\n            {author}: <AuthorReview>{content}</AuthorReview>\n          </Author>\n        </ItemList>\n      ))}\n      <ToastContainer />\n    </List>\n  );\n};\n\nexport default MovieReviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'a7cdca3ac9a73d688c9dec2c3c2e067b',\n};\n\nexport async function GetTrendingMovies() {\n  const response = await axios.get('trending/movie/day');\n  return response.data;\n}\n\nexport async function GetSearchMovies(query) {\n  const response = await axios.get(`search/movie?query=${query}`);\n  return response.data;\n}\n\nexport async function GetMovieDetails(id) {\n  const response = await axios.get(`/movie/${id}`);\n  return response.data;\n}\n\nexport async function GetMovieCredits(id) {\n  const response = await axios.get(`/movie/${id}/credits`);\n  return response.data;\n}\n\nexport async function GetMovieReviews(id) {\n  const response = await axios.get(`/movie/${id}/reviews`);\n  return response.data;\n}\n"],"names":["List","styled","ItemList","TextResult","Author","AuthorReview","details","useParams","useState","reviews","setReviews","useEffect","GetMovieReviews","then","data","results","toast","length","map","author","content","id","GetTrendingMovies","axios","response","GetSearchMovies","query","GetMovieDetails","GetMovieCredits","api_key"],"sourceRoot":""}